#ifndef TVT_VIDEO_INPUT_OUTPUT_CONTROL_CODE
#define TVT_VIDEO_INPUT_OUTPUT_CONTROL_CODE

#ifndef CTL_CODE
	#pragma message("CTL_CODE undefined. Include winioctl.h or wdm.h")
#endif

// FILE_DEVICE_UNKNOWN is used IoCreateDevice of AddDevice
#define IOCTL_VIDEO_INIT_DEVICE			CTL_CODE(FILE_DEVICE_UNKNOWN, 0x800, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_TEST_REGISTEREVENT	CTL_CODE(FILE_DEVICE_UNKNOWN, 0x801, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_TEST_CALLEVENT		CTL_CODE(FILE_DEVICE_UNKNOWN, 0x802, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_TEST_START_CAPTURE	CTL_CODE(FILE_DEVICE_UNKNOWN, 0x803, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_TEST_FINISH_CAPTURE	CTL_CODE(FILE_DEVICE_UNKNOWN, 0x804, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_TEST_GET_ADDR		CTL_CODE(FILE_DEVICE_UNKNOWN, 0x805, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_TEST_SET_CHANNEL	CTL_CODE(FILE_DEVICE_UNKNOWN, 0x806, METHOD_BUFFERED, FILE_ANY_ACCESS)

#define IOCTL_SET_VIDEOMEMORY		 CTL_CODE(FILE_DEVICE_UNKNOWN, 0x807, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_GET_VIDEO_DATA_ADDR CTL_CODE(FILE_DEVICE_UNKNOWN, 0x808, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_SET_BUFFER_MUTEX	 CTL_CODE(FILE_DEVICE_UNKNOWN, 0x809, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_DRIVER_START                 CTL_CODE(FILE_DEVICE_UNKNOWN, 0x80a, METHOD_BUFFERED, FILE_ANY_ACCESS)

#define IOCTL_VIDEO_SET_CHIP_CHANNEL_TURN   CTL_CODE(FILE_DEVICE_UNKNOWN, 0x80b, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_VIDEO_GET_DATA_INFO   CTL_CODE(FILE_DEVICE_UNKNOWN, 0x80c, METHOD_BUFFERED, FILE_ANY_ACCESS)


#define IOCTL_CONTROL_CHIP_SETTING CTL_CODE(FILE_DEVICE_UNKNOWN, 0x80d, METHOD_BUFFERED, FILE_ANY_ACCESS)

#define IOCTL_VIDEO_SET_DISPLAY_MEM CTL_CODE(FILE_DEVICE_UNKNOWN, 0x80e, METHOD_OUT_DIRECT, FILE_ANY_ACCESS)

#define TVT_VIDEO_SINGLE_NTSC 1
#define TVT_VIDEO_SINGLE_PAL   3

#define TVT_VIDEO_IMAGE_SIZE_320240      1
#define TVT_VIDEO_IMAGE_SIZE_640480      2
#define TVT_VIDEO_IMAGE_SIZE_640240      3
#define TVT_VIDEO_IMAGE_SIZE_640480SW 4
#define TVT_VIDEO_IMAGE_SIZE_720576      5
#define TVT_VIDEO_IMAGE_SIZE_720288      6
#define TVT_VIDEO_IMAGE_SIZE_352288      7
#define TVT_VIDEO_IMAGE_SIZE_720240      8
#define TVT_VIDEO_IMAGE_SIZE_720480      9

#define TVT_VIDEO_LOST_FLAG_HLOCK 1
#define TVT_VIDEO_LOST_FLAG_LOST 2
#define TVT_VIDEO_LOST_FLAG_COMEIN 3

#define TVT_VIDEO_IMAGE_COLOR_YUY2        1


#define MAX_CHANNEL_COUNT_FOR_PER_CHIP 30
#define ALARM_IN_OUT_COUNT 16

#define MAX_C51_OP_BLOCK_NUMBER 30
#define MAX_VIDEO_SIGNAL_NUMBER 16

#define MAX_CALL_MONITOR_INDEX 16


typedef enum _APP_DRIVER_OP_TYPE
{
	ENUM_CHIP_INITIALIZE,
	ENUM_CHIP_FINISH,
	ENUM_VIDEO_CAPTURE_START,
	ENUM_VIDEO_CAPTURE_STOP,
	ENUM_CALL_MONITOR,
	ENUM_GET_ENCRYPT,
	ENUM_SET_C51_ADDRESS_VALUE,
	ENUM_SET_ALARM_OUT,
	ENUM_GET_ALARM_IN,
	ENUM_SET_VIDEO_IMAGE_PROP,
	ENUM_GET_VIDEO_IMAGE_PROP,
	ENUN_SET_CHANNEL_TURN_ORDER,
	ENUM_GET_VIDEO_LOST_STATUS,
	ENUM_READ_GPIO_VALUE,
	ENUM_WRITE_GPIO_VALUE,
	ENUM_GET_CHIP_NUMBER
}APP_DRIVER_OP_TYPE;

typedef struct _APP_DRIVER_BUFFER_INFO
{
	APP_DRIVER_OP_TYPE m_enumCurrentOPType;

	//ENUM_CHIP_INITIALIZE
	HANDLE m_hEvent;

	//not used
	ULONG m_ulVideoWidth;
	ULONG m_ulVideoHeight;
	ULONG m_ulVideoDepth;

	//chip number
	ULONG m_ulChipTotalNumber;

	//video real time flags
	BOOLEAN m_bVideoRealTimeFlag;

	//ENUM_VIDEO_CAPTURE_START
	ULONG m_ulVideoStandard;
	ULONG m_ulVideoSizeType;
	ULONG m_ulTotalChipCount; //open total chip number

	//ENUM_CALL_MONITOR
	ULONG m_ulCallMonitorChannel;

	//ENUM_VIDEO_CAPTURE_START
	ULONG m_ulDefaultMUXValue;

	//ENUM_SET_C51_ADDRESS_VALUE
	ULONG m_ulC51OpByteOrBlock;
	ULONG m_ulC51OpSubAddress;
	ULONG m_ulC51OpValueCount;
	ULONG m_ulC51OpValue[MAX_C51_OP_BLOCK_NUMBER];

	//ENUM_SET_VIDEO_IMAGE_PROP
	ULONG m_ulImageChannelIndex;
	ULONG m_ulImageBrightness;
	ULONG m_ulImageContrast;
	ULONG m_ulImageHue;
	ULONG m_ulImageSaturation;
	ULONG m_ulImageAGCGain;

	//ENUM_GET_VIDEO_LOST_STATUS
	ULONG m_ulSignalState[MAX_VIDEO_SIGNAL_NUMBER];

	//ENUM_SET_ALARM_IN
	ULONG m_ulAlarmInOut[ALARM_IN_OUT_COUNT];

	//ENUM_VIDEO_CAPTURE_START
	ULONG m_ulChannelNumber;
	ULONG m_ulChannel[MAX_CHANNEL_COUNT_FOR_PER_CHIP];

	//read write gpio value
	ULONG m_ulBeginBit;
	ULONG m_ulBitLen;
	ULONG m_ulGPIOValue;

	//display mem depth
	ULONG m_ulDisplayMemDepth;
	
	//return value
	ULONG m_ulRetuBufFlagAddress;
	ULONG m_ulRetuVideoBufAddress;
}APP_DRIVER_BUFFER_INFO, *PAPP_DRIVER_BUFFER_INFO;

#define TVT_VIDEO_CHIP_BUFFER_LEN 4
#define TVT_VIDEO_QUEUE_SIZE 16


//Buffer used flag
typedef struct _TVT_VIDEO_EACH_BUF_USE_FLAG
{
	ULONG m_ulBufferIsUsedFlag;
	ULONG m_ulBufferIsShowFlag;
	ULONG m_ulBufferIsWriteFlag;
	ULONG m_ulBufferIsMovingDetect;
	ULONG m_ulReserved[5];
	ULONGLONG m_ullTime;
}TVT_VIDEO_EACH_BUF_USE_FLAG,*PTVT_VIDEO_EACH_BUF_USE_FLAG;

//all buf flag
typedef struct _TVT_VIDEO_ALL_BUF_USE_FLAG
{
	TVT_VIDEO_EACH_BUF_USE_FLAG m_stBufferUsedFlag[TVT_VIDEO_CHIP_BUFFER_LEN];
}TVT_VIDEO_ALL_BUF_USE_FLAG,*PTVT_VIDEO_ALL_BUF_USE_FLAG;


//buffer information
typedef struct _TVT_VIDEO_EACH_BUF_INFO
{
	UCHAR m_ucLostFlag;
	
	UCHAR m_uBufNumber;
	UCHAR m_uChipNumber;

	ULONG m_ulBufUserAddress;
	ULONG m_ulBufLen;

	ULONG m_ulImageWidth;
	ULONG m_ulImageHeight;
	ULONG m_ulImageDepth;

	ULONG m_ulCurrentRiscNumber;
	
	ULONGLONG m_ullTime;
	LARGE_INTEGER m_largeLocalTime;

	UCHAR m_ucDeviceStatus;

}TVT_VIDEO_EACH_BUF_INFO,*PTVT_VIDEO_EACH_BUF_INFO;


//all buffer information
typedef struct _TVT_VIDEO_BUF_QUEUE_INFO
{
	KSPIN_LOCK m_lockBufInfoQueue;
	ULONG m_ulQueueMaxSize;
	ULONG m_ulQueueCount;
	ULONG m_ulFirstPos;
	ULONG m_ulLastPos;
	TVT_VIDEO_EACH_BUF_INFO m_stBufInfo[TVT_VIDEO_QUEUE_SIZE];

}TVT_VIDEO_BUF_QUEUE_INFO,*PTVT_VIDEO_BUF_QUEUE_INFO;



//application and driver control buffer information
typedef struct _TVT_VIDEO_FRAME_INFO{
	TVT_VIDEO_EACH_BUF_INFO m_stFrameInfo;
	TVT_VIDEO_ALL_BUF_USE_FLAG m_stBufFlag;
}TVT_VIDEO_FRAME_INFO,*PTVT_VIDEO_FRAME_INFO;


#endif 
